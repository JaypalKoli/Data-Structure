#include<stdio.h>
#include<conio.h>
#define size 10
int count=0;
struct hashTable
{
   int data;
   int delstatus;
};
struct hashTable ht[size];
void initHT()
{
   int i;
   for(i=0;i<size;i++)
   {
   ht[i].delstatus=1;
   }
}
int isFull()
{
   if(count==size)
      return 1;
   else
      return 0;
}
int isEmpty()
{
   if(count==0)
    return 1;
   else
    return 0;
}
void addData()
{
   int data,key,i;
   if(!isFull())
   {
      printf("Enter Data : ");
      scanf("%d",&data);
      key=data%size;
      if(ht[key].delstatus==1)
         {
	ht[key].data=data;
	ht[key].delstatus=0;
	printf("\nData added to table\n");
	count++;
	}
       else
       {
	for(i=0;i<size;i++)
	{
	  key=(key+1)%size;
	  if(ht[key].delstatus==1)
	   {
	    ht[key].data=data;
	    ht[key].delstatus=0;
	    printf("\nData Added to Table\n");
	    count++;
	    break;
	    }
	}
       }
   }
   else
   {
      printf("\nHash Table Full\n");
   }
}
void delData()
{
   int data,key,i,flag=0;
   if(!isEmpty())
   {
      printf("\nEnter data to delete : ");
      scanf("%d",&data);
      key=data%size;
      if(ht[key].delstatus==0 && ht[key].data==data);
	{
	  ht[key].delstatus=1;
	  printf("\nData deleted from table\n");
	  count--;
	 }
      else
         {
         for(i=0;i<size;i++)
	  {
	   key=(key+1)%size;
	   if(ht[key].data==data)
	    {
	     ht[key].delstatus=1;
	     printf("\nData deleted from table\n");
	     count--;
	     flag=1;
	     break;
	    }
	   }
    if(flag==0)
     printf("\nData to be deleted not found in table\n");
  }
   }
   else
    printf("\nHash table empty\n");
}
void display()
{
   int i;
   for(i=0;i<size;i++)
   {
      if(ht[i].delstatus==0)
   {
    printf("| %d |",ht[i].data);
   }
   else
    printf("| |");
   }
}
void main()
{
   int ch;
   clrscr();
   initHT();
   do
    {
     printf("\nMain menu :\n");
     printf("\n1.Add data");
     printf("\2.Delete data");
     printf("\n3.Exit");
     printf("\nEnter choice ");
     scanf("%d",&ch);
     switch(ch)
     {
      case 1: addData();
	    break;
      case 2: deldata();
	    break;
      case 3: display();
	    getch();
	    break;
      case 4: exit(0);
      default : printf("Wrong choice");
      }
    }while(ch!=4);
}
